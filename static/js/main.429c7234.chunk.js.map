{"version":3,"sources":["components/info.js","components/form.js","components/weather.js","components/sunset_date.js","components/sunrise_date.js","components/timezone.js","App.js","index.js"],"names":["Info","Form","props","className","onSubmit","gettingWeather","type","name","placeholder","Weather","city","country","temp","sunrise","timezone","sunset","pressure","error","sunsetDate","sunsetUnix","timezoneUnix","date_sunset","Date","setTime","getUTCHours","getMinutes","sunriseDate","sunriseUnix","date_sunrise","timezoneHours","date_timezone","API_Key","App","state","undefined","e","a","preventDefault","target","elements","value","fetch","api_url","json","data","timezone_date","sunrise_date","sys","sunset_date","setState","Math","round","main","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.429c7234.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Info = () => {\r\n  return (\r\n    <div>\r\n      <h2>Weather App</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info\r\n","import React from \"react\"\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <form className=\"top-form\" onSubmit={props.gettingWeather}>\r\n      <input type=\"text\" name=\"city\" placeholder=\"City\" />\r\n      <button>Search</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from \"react\"\r\n\r\nconst Weather = (props) => {\r\n  return (\r\n    <div className=\"bottom-form\">\r\n      {props.city && (\r\n        <div className=\"infoWeath\">\r\n          <p>\r\n            Location: {props.city}, {props.country}\r\n          </p>\r\n          <p>Temperature: {props.temp} Â°C</p>\r\n          <p>\r\n            Sunrise: {props.sunrise} (GMT{\" \"}\r\n            {(props.timezone <= 0 ? \"\" : \"+\") + props.timezone})\r\n          </p>\r\n          <p>\r\n            Sunset: {props.sunset} (GMT{\" \"}\r\n            {(props.timezone <= 0 ? \"\" : \"+\") + props.timezone})\r\n          </p>\r\n          <p>Pressure: {props.pressure} hPa</p>\r\n        </div>\r\n      )}\r\n      <p className=\"error\">{props.error}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather\r\n","export var sunsetDate = (sunsetUnix, timezoneUnix) => {\r\n  var sunset = (sunsetUnix + timezoneUnix) * 1000\r\n  var date_sunset = new Date()\r\n  date_sunset.setTime(sunset)\r\n  var sunsetDate =\r\n    (date_sunset.getUTCHours() < 10 ? \"0\" : \"\") +\r\n    date_sunset.getUTCHours() +\r\n    \":\" +\r\n    (date_sunset.getMinutes() < 10 ? \"0\" : \"\") +\r\n    date_sunset.getMinutes()\r\n\r\n  return sunsetDate\r\n}\r\n","export var sunriseDate = (sunriseUnix, timezoneUnix) => {\r\n  var sunrise = (sunriseUnix + timezoneUnix) * 1000\r\n  var date_sunrise = new Date()\r\n  date_sunrise.setTime(sunrise)\r\n  var sunriseDate =\r\n    (date_sunrise.getUTCHours() < 10 ? \"0\" : \"\") +\r\n    date_sunrise.getUTCHours() +\r\n    \":\" +\r\n    (date_sunrise.getMinutes() < 10 ? \"0\" : \"\") +\r\n    date_sunrise.getMinutes()\r\n\r\n  return sunriseDate\r\n}\r\n","export var timezoneHours = (timezoneUnix) => {\r\n  var timezone = timezoneUnix * 1000\r\n  var date_timezone = new Date()\r\n  date_timezone.setTime(timezone)\r\n  var timezoneHours = date_timezone.getUTCHours()\r\n  if (timezoneHours > 12) {\r\n    timezoneHours = timezoneHours - 24\r\n  }\r\n  return timezoneHours\r\n}\r\n","import React from \"react\"\nimport Info from \"./components/info\"\nimport Form from \"./components/form\"\nimport Weather from \"./components/weather\"\nimport \"./App.css\"\nimport { sunsetDate } from \"./components/sunset_date\"\nimport { sunriseDate } from \"./components/sunrise_date\"\nimport { timezoneHours } from \"./components/timezone\"\n\nconst API_Key = \"868d1a1070c8c536a9a827b731af4a66\"\n\nclass App extends React.Component {\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    timezone: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    pressure: undefined,\n    error: undefined,\n  }\n\n  gettingWeather = async (e) => {\n    e.preventDefault()\n    const city = e.target.elements.city.value\n\n    if (city) {\n      const api_url = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_Key}&units=metric`\n      )\n      const data = await api_url.json()\n\n      try {\n        var timezone_date = timezoneHours(data.timezone)\n        var sunrise_date = sunriseDate(data.sys.sunrise, data.timezone)\n        var sunset_date = sunsetDate(data.sys.sunset, data.timezone)\n\n        this.setState({\n          temp: Math.round(data.main.temp),\n          city: data.name,\n          country: data.sys.country,\n          timezone: timezone_date,\n          sunrise: sunrise_date,\n          sunset: sunset_date,\n          pressure: data.main.pressure,\n          error: undefined,\n        })\n      } catch {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          timezone: undefined,\n          sunrise: undefined,\n          sunset: undefined,\n          pressure: undefined,\n          error: \"Please, enter correct city name\",\n        })\n      }\n    } else {\n      this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        timezone: undefined,\n        sunrise: undefined,\n        sunset: undefined,\n        pressure: undefined,\n        error: \"Please, enter the city name\",\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"info\">\n              <Info />\n            </div>\n            <div className=\"form\">\n              <Form gettingWeather={this.gettingWeather} />\n              <Weather\n                temp={this.state.temp}\n                city={this.state.city}\n                country={this.state.country}\n                timezone={this.state.timezone}\n                sunrise={this.state.sunrise}\n                sunset={this.state.sunset}\n                pressure={this.state.pressure}\n                error={this.state.error}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"circle1\"></div>\n        <div className=\"circle2\"></div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}